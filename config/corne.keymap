/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#define DEFAULT 0
#define QWERTY  1
#define LOWER   2
#define RAISE   3

 

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | CTRL |  A  |  R  |  S  |  T  |  G  |   |  K  |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  X  |  C  |  D  |  V  |  Z  |   |  M  |  H   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp K &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp X &kp C &kp D &kp V &kp Z   &kp M &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 3 &kp RALT
                        >;
                };	
              qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  '  |  ;   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |  ESC |
//                    | GUI | LWR | SPC |   | ENT | RSE | ALT |
                        bindings = <
 &kp  TAB  &kp Q  &kp W &kp E  &kp R  &kp T       &kp Y  &kp U  &kp I      &kp O    &kp P    &kp BSPC
 &kp LCTRL &kp A  &kp S &kp D  &kp F  &kp G       &kp H  &kp J  &kp K      &kp L    &kp SQT  &kp SEMI
 &kp LSHFT &kp Z  &kp X &kp C  &kp V  &kp B       &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH &kp ESC
                           &kp LGUI &mo 2   &kp SPACE   &kp RET   &mo 3    &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP  |
// | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DWN |  UP | RGT | DEL   |
// | SHFT |EPTOG|     |     |     |     |   |     | HOME| PGDN| PGUP| END | BT_CLR|
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1             &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8     &kp N9     &kp N0     &kp BSPC
   &kp LCTRL  &bt BT_SEL 0       &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp LEFT &kp DOWN   &kp UP     &kp RIGHT  &kp DEL
   &kp LSHFT  &ext_power EP_TOG  &trans       &trans       &trans       &trans         &trans   &kp HOME &kp PG_DN  &kp PG_UP  &kp END    &bt BT_CLR
                                    &kp LGUI     &trans       &kp SPACE      &kp RET   &tog 1   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &tog 0   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
				
        };
};
